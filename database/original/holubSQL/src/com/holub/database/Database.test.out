Parsing: create database Dbase
Parsing: create table address (addrId int, street varchar, city varchar, state char(2), zip int, primary key(addrId))
Parsing: create table name(first varchar(10), last varchar(10), addrId integer)
Parsing: insert into address values( 0,'12 MyStreet','Berkeley','CA','99999')
Parsing: insert into address values( 1, '34 Quarry Ln.', 'Bedrock' , 'XX', '00000')
Parsing: insert into name VALUES ('Fred',  'Flintstone', '1')
Parsing: insert into name VALUES ('Wilma', 'Flintstone', '1')
Parsing: insert into name (last,first,addrId) VALUES('Holub','Allen',(10-10*1))
Parsing: update address set state = "AZ"  where state = "XX"
Parsing: update address set zip = zip-1 where zip = (99999*1 + (10-10)/1)
Parsing: insert into name (last,first) VALUES( 'Please', 'Delete' )
Parsing: delete from name where last like '%eas%'
Parsing: select * from address
<anonymous>
addrId	street	city	state	zip	
----------------------------------------
0	12 MyStreet	Berkeley	CA	99998	
1	34 Quarry Ln.	Bedrock	AZ	00000	

Parsing: select * from name
<anonymous>
first	last	addrId	
----------------------------------------
Fred	Flintstone	1	
Wilma	Flintstone	1	
Allen	Holub	0	

Parsing: select first, last from name where last = 'Flintstone'
<anonymous>
first	last	
----------------------------------------
Fred	Flintstone	
Wilma	Flintstone	

Parsing: select first, last, street, city, zip from name, address where name.addrId = address.addrId
<anonymous>
first	last	street	city	zip	
----------------------------------------
Fred	Flintstone	34 Quarry Ln.	Bedrock	00000	
Wilma	Flintstone	34 Quarry Ln.	Bedrock	00000	
Allen	Holub	12 MyStreet	Berkeley	99998	

Parsing: create table id (addrId, description)
Parsing: insert into id VALUES (0, 'AddressID=0')
Parsing: insert into id VALUES (1, 'AddressID=1')
Parsing: select first, last, street, city, zip, description from name, address, id WHERE name.addrId = address.addrId AND name.addrId = id.addrId
<anonymous>
first	last	street	city	zip	description	
----------------------------------------
Fred	Flintstone	34 Quarry Ln.	Bedrock	00000	AddressID=1	
Wilma	Flintstone	34 Quarry Ln.	Bedrock	00000	AddressID=1	
Allen	Holub	12 MyStreet	Berkeley	99998	AddressID=0	

Parsing: drop table id
Parsing: select first, last from name where last='Flintstone' AND first='Fred' OR first like '%lle%'
<anonymous>
first	last	
----------------------------------------
Fred	Flintstone	
Allen	Holub	

Parsing: create table foo (first, second, third, fourth)
Parsing: insert into foo (first,third,fourth) values(1,3,4)
Parsing: update foo set fourth=null where fourth=4
Parsing: select  * from foo
<anonymous>
first	second	third	fourth	
----------------------------------------
1	null	3	null	

Parsing: select  * from foo where second=NULL AND third<>NULL
<anonymous>
first	second	third	fourth	
----------------------------------------
1	null	3	null	

Parsing: drop table foo
Parsing: select * into existing_copy from existing
existing_copy
one	two	three	
----------------------------------------
doo	wha	ditty	
ditty	wha	ditty	
doo	whap	choo-ah	

Parsing: select * from existing_copy
<anonymous>
one	two	three	
----------------------------------------
doo	wha	ditty	
ditty	wha	ditty	
doo	whap	choo-ah	

Parsing: create table foo (only)
Parsing: insert into foo values('xxx')
Parsing: begin
Parsing: insert into foo values('should not see this')
Parsing: rollback
Parsing: select * from foo
<anonymous>
only	
----------------------------------------
xxx	

Parsing: begin
Parsing: insert into foo values('yyy')
Parsing: select * from foo
<anonymous>
only	
----------------------------------------
xxx	
yyy	

Parsing: begin
Parsing: insert into foo values('should not see this')
Parsing: rollback
Parsing: begin
Parsing: insert into foo values('zzz')
Parsing: select * from foo
<anonymous>
only	
----------------------------------------
xxx	
yyy	
zzz	

Parsing: commit
Parsing: select * from foo
<anonymous>
only	
----------------------------------------
xxx	
yyy	
zzz	

Parsing: commit
Parsing: select * from foo
<anonymous>
only	
----------------------------------------
xxx	
yyy	
zzz	

Parsing: insert into foo values('end')
Parsing: select * from foo
<anonymous>
only	
----------------------------------------
xxx	
yyy	
zzz	
end	

Parsing: drop table foo
Parsing: create table foo (only)
Parsing: begin
Parsing: insert into foo values('a')
Parsing: insert into foo values('b')
Parsing: begin
Parsing: insert into foo values('c')
Parsing: insert into foo values('d')
Parsing: select * from foo
<anonymous>
only	
----------------------------------------
a	
b	
c	
d	

Parsing: commit
Parsing: rollback
Parsing: select * from foo
<anonymous>
only	
----------------------------------------

Parsing: drop table foo
Correctly found garbage SQL:
com.holub.text.ParseFailure: "into" expected.
Line 1:
insert garbage SQL
_______^

Database PASSED
